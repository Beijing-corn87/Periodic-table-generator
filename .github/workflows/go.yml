# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # This pattern matches tags like v1.0.0, v2.1.5, etc.
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  build-linux-x64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
    - name: Build artifact
      run: go build -o linux-x64 -v ./...
    - name: Test
      run: go test -v ./...
    - name: upload artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: linux-x64
        path: linux-x64

  build-linux-arm64:
    runs-on: ubuntu-24.04-arm
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
    - name: Build artifact
      run: go build -o linux-arm64 -v ./...
    - name: Test
      run: go test -v ./...
    - name: upload artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: linux-arm64
        path: linux-arm64

  build-windows-x64:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
    - name: Build artifact
      run: go build -o windows-x64.exe -v ./...
    - name: Test
      run: go test -v ./...
    - name: upload artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: windows-x64.exe
        path: windows-x64.exe

  build-windows-arm64:
    runs-on: windows-11-arm
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
    - name: Build artifact
      run: go build -o windows-arm64.exe -v ./...
    - name: Test
      run: go test -v ./...
    - name: upload artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: windows-arm64.exe
        path: windows-arm64.exe

  build-macos-x64:
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
    - name: Build artifact
      run: go build -o macos-x64 -v ./...
    - name: Test
      run: go test -v ./...
    - name: upload artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: macos-x64
        path: macos-x64

  build-macos-arm64:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
    - name: Build artifact
      run: go build -o macos-arm64 -v ./...
    - name: Test
      run: go test -v ./...
    - name: upload artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: macos-arm64
        path: macos-arm64

  release:
    needs: [build-linux-x64, build-linux-arm64, build-windows-x64, build-windows-arm64, build-macos-x64, build-macos-arm64]
    runs-on: ubuntu-latest
    # The 'if' condition ensures this job only runs when a tag is pushed.
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write # This is crucial for creating the release and uploading artifacts.
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4.1.7

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }} # Dynamically uses the tag that triggered the workflow.
          name: Release ${{ github.ref_name }}
          body: |
            ## Release Notes for ${{ github.ref_name }}
            
            This release includes the following binaries:
            - Linux x64
            - Linux ARM64
            - Windows x64
            - Windows ARM64
            - macOS x64
            - macOS ARM64
          artifacts: "linux-x64,linux-arm64,windows-x64.exe,windows-arm64.exe,macos-x64,macos-arm64"
          token: ${{ secrets.GITHUB_TOKEN }}
